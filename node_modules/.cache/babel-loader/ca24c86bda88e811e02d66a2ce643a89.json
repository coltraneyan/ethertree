{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nclass ContextElementDependency extends ModuleDependency {\n  /**\n   * @param {string} request request\n   * @param {string|undefined} userRequest user request\n   * @param {string} typePrefix type prefix\n   * @param {string} category category\n   * @param {string[][]=} referencedExports referenced exports\n   * @param {string=} context context\n   */\n  constructor(request, userRequest, typePrefix, category, referencedExports, context) {\n    super(request);\n    this.referencedExports = referencedExports;\n    this._typePrefix = typePrefix;\n    this._category = category;\n    this._context = context || undefined;\n\n    if (userRequest) {\n      this.userRequest = userRequest;\n    }\n  }\n\n  get type() {\n    if (this._typePrefix) {\n      return `${this._typePrefix} context element`;\n    }\n\n    return \"context element\";\n  }\n  /**\n   * @returns {string | undefined} a request context\n   */\n\n\n  getContext() {\n    return this._context;\n  }\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n\n\n  getResourceIdentifier() {\n    return `context${this._context || \"\"}|${super.getResourceIdentifier()}`;\n  }\n\n  get category() {\n    return this._category;\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    return this.referencedExports ? this.referencedExports.map(e => ({\n      name: e,\n      canMangle: false\n    })) : Dependency.EXPORTS_OBJECT_REFERENCED;\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this._typePrefix);\n    write(this._category);\n    write(this._context);\n    write(this.referencedExports);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this._typePrefix = read();\n    this._category = read();\n    this._context = read();\n    this.referencedExports = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(ContextElementDependency, \"webpack/lib/dependencies/ContextElementDependency\");\nmodule.exports = ContextElementDependency;","map":{"version":3,"names":["Dependency","require","makeSerializable","ModuleDependency","ContextElementDependency","constructor","request","userRequest","typePrefix","category","referencedExports","context","_typePrefix","_category","_context","undefined","type","getContext","getResourceIdentifier","getReferencedExports","moduleGraph","runtime","map","e","name","canMangle","EXPORTS_OBJECT_REFERENCED","serialize","write","deserialize","read","module","exports"],"sources":["/Users/coltraneyan/repos/ethertree/node_modules/webpack/lib/dependencies/ContextElementDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass ContextElementDependency extends ModuleDependency {\n\t/**\n\t * @param {string} request request\n\t * @param {string|undefined} userRequest user request\n\t * @param {string} typePrefix type prefix\n\t * @param {string} category category\n\t * @param {string[][]=} referencedExports referenced exports\n\t * @param {string=} context context\n\t */\n\tconstructor(\n\t\trequest,\n\t\tuserRequest,\n\t\ttypePrefix,\n\t\tcategory,\n\t\treferencedExports,\n\t\tcontext\n\t) {\n\t\tsuper(request);\n\t\tthis.referencedExports = referencedExports;\n\t\tthis._typePrefix = typePrefix;\n\t\tthis._category = category;\n\t\tthis._context = context || undefined;\n\n\t\tif (userRequest) {\n\t\t\tthis.userRequest = userRequest;\n\t\t}\n\t}\n\n\tget type() {\n\t\tif (this._typePrefix) {\n\t\t\treturn `${this._typePrefix} context element`;\n\t\t}\n\n\t\treturn \"context element\";\n\t}\n\n\t/**\n\t * @returns {string | undefined} a request context\n\t */\n\tgetContext() {\n\t\treturn this._context;\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\treturn `context${this._context || \"\"}|${super.getResourceIdentifier()}`;\n\t}\n\n\tget category() {\n\t\treturn this._category;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\treturn this.referencedExports\n\t\t\t? this.referencedExports.map(e => ({\n\t\t\t\t\tname: e,\n\t\t\t\t\tcanMangle: false\n\t\t\t  }))\n\t\t\t: Dependency.EXPORTS_OBJECT_REFERENCED;\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this._typePrefix);\n\t\twrite(this._category);\n\t\twrite(this._context);\n\t\twrite(this.referencedExports);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis._typePrefix = read();\n\t\tthis._category = read();\n\t\tthis._context = read();\n\t\tthis.referencedExports = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tContextElementDependency,\n\t\"webpack/lib/dependencies/ContextElementDependency\"\n);\n\nmodule.exports = ContextElementDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,oBAAD,CAAhC;AAEA;;AACA;;AACA;;;AAEA,MAAMG,wBAAN,SAAuCD,gBAAvC,CAAwD;EACvD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCE,WAAW,CACVC,OADU,EAEVC,WAFU,EAGVC,UAHU,EAIVC,QAJU,EAKVC,iBALU,EAMVC,OANU,EAOT;IACD,MAAML,OAAN;IACA,KAAKI,iBAAL,GAAyBA,iBAAzB;IACA,KAAKE,WAAL,GAAmBJ,UAAnB;IACA,KAAKK,SAAL,GAAiBJ,QAAjB;IACA,KAAKK,QAAL,GAAgBH,OAAO,IAAII,SAA3B;;IAEA,IAAIR,WAAJ,EAAiB;MAChB,KAAKA,WAAL,GAAmBA,WAAnB;IACA;EACD;;EAEO,IAAJS,IAAI,GAAG;IACV,IAAI,KAAKJ,WAAT,EAAsB;MACrB,OAAQ,GAAE,KAAKA,WAAY,kBAA3B;IACA;;IAED,OAAO,iBAAP;EACA;EAED;AACD;AACA;;;EACCK,UAAU,GAAG;IACZ,OAAO,KAAKH,QAAZ;EACA;EAED;AACD;AACA;;;EACCI,qBAAqB,GAAG;IACvB,OAAQ,UAAS,KAAKJ,QAAL,IAAiB,EAAG,IAAG,MAAMI,qBAAN,EAA8B,EAAtE;EACA;;EAEW,IAART,QAAQ,GAAG;IACd,OAAO,KAAKI,SAAZ;EACA;EAED;AACD;AACA;AACA;AACA;AACA;;;EACCM,oBAAoB,CAACC,WAAD,EAAcC,OAAd,EAAuB;IAC1C,OAAO,KAAKX,iBAAL,GACJ,KAAKA,iBAAL,CAAuBY,GAAvB,CAA2BC,CAAC,KAAK;MACjCC,IAAI,EAAED,CAD2B;MAEjCE,SAAS,EAAE;IAFsB,CAAL,CAA5B,CADI,GAKJzB,UAAU,CAAC0B,yBALd;EAMA;;EAEDC,SAAS,CAAChB,OAAD,EAAU;IAClB,MAAM;MAAEiB;IAAF,IAAYjB,OAAlB;IACAiB,KAAK,CAAC,KAAKhB,WAAN,CAAL;IACAgB,KAAK,CAAC,KAAKf,SAAN,CAAL;IACAe,KAAK,CAAC,KAAKd,QAAN,CAAL;IACAc,KAAK,CAAC,KAAKlB,iBAAN,CAAL;IACA,MAAMiB,SAAN,CAAgBhB,OAAhB;EACA;;EAEDkB,WAAW,CAAClB,OAAD,EAAU;IACpB,MAAM;MAAEmB;IAAF,IAAWnB,OAAjB;IACA,KAAKC,WAAL,GAAmBkB,IAAI,EAAvB;IACA,KAAKjB,SAAL,GAAiBiB,IAAI,EAArB;IACA,KAAKhB,QAAL,GAAgBgB,IAAI,EAApB;IACA,KAAKpB,iBAAL,GAAyBoB,IAAI,EAA7B;IACA,MAAMD,WAAN,CAAkBlB,OAAlB;EACA;;AArFsD;;AAwFxDT,gBAAgB,CACfE,wBADe,EAEf,mDAFe,CAAhB;AAKA2B,MAAM,CAACC,OAAP,GAAiB5B,wBAAjB"},"metadata":{},"sourceType":"script"}