{"ast":null,"code":"var _jsxFileName = \"/Users/coltraneyan/repos/ethertree/src/components/Tree.js\";\nimport React, { useEffect } from \"react\";\nimport Xarrow from \"react-xarrows\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nconst Tree = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flow-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"central-node\",\n      id: \"a\",\n      children: props.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), [...props.tree].map(tx => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-wrapper\",\n      id: tx,\n      onClick: e => {\n        props.triggerFetch(e.target.id);\n      },\n      style: {\n        position: \"absolute\",\n        left: `${getRandomInt(20, 80)}%`,\n        transform: \"translateX(-50%)\",\n        top: `${getRandomInt(20, 80)}%`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"address-node\",\n        children: tx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)), [...props.tree].map((tx, i) => /*#__PURE__*/_jsxDEV(Xarrow, {\n      start: \"a\" //can be react ref\n      ,\n      end: tx //or an id\n      ,\n      startAnchor: \"middle\",\n      endAnchor: \"middle\",\n      showHead: false,\n      strokeWidth: 1,\n      curveness: 0,\n      lineColor: \"#0076ED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tree;\nexport default Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","useEffect","Xarrow","getRandomInt","min","max","Math","ceil","floor","random","Tree","props","address","tree","map","tx","e","triggerFetch","target","id","position","left","transform","top","i"],"sources":["/Users/coltraneyan/repos/ethertree/src/components/Tree.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport Xarrow from \"react-xarrows\";\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nconst Tree = (props) => {\n  return (\n    <div className=\"flow-container\">\n      <div className=\"central-node\" id=\"a\">\n        {props.address}\n      </div>\n      {[...props.tree].map((tx) => (\n        <div\n          className=\"node-wrapper\"\n          id={tx}\n          onClick={(e) => {\n            props.triggerFetch(e.target.id);\n          }}\n          style={{\n            position: \"absolute\",\n            left: `${getRandomInt(20, 80)}%`,\n            transform: \"translateX(-50%)\",\n            top: `${getRandomInt(20, 80)}%`,\n          }}\n        >\n          <div className=\"address-node\">{tx}</div>\n        </div>\n      ))}\n      {[...props.tree].map((tx, i) => (\n        <Xarrow\n          start=\"a\" //can be react ref\n          end={tx} //or an id\n          startAnchor=\"middle\"\n          endAnchor=\"middle\"\n          showHead={false}\n          strokeWidth={1}\n          curveness={0}\n          lineColor=\"#0076ED\"\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Tree;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;EAC9BD,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;EACAC,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;EACA,OAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AACD;;AAED,MAAMM,IAAI,GAAIC,KAAD,IAAW;EACtB,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAK,SAAS,EAAC,cAAf;MAA8B,EAAE,EAAC,GAAjC;MAAA,UACGA,KAAK,CAACC;IADT;MAAA;MAAA;MAAA;IAAA,QADF,EAIG,CAAC,GAAGD,KAAK,CAACE,IAAV,EAAgBC,GAAhB,CAAqBC,EAAD,iBACnB;MACE,SAAS,EAAC,cADZ;MAEE,EAAE,EAAEA,EAFN;MAGE,OAAO,EAAGC,CAAD,IAAO;QACdL,KAAK,CAACM,YAAN,CAAmBD,CAAC,CAACE,MAAF,CAASC,EAA5B;MACD,CALH;MAME,KAAK,EAAE;QACLC,QAAQ,EAAE,UADL;QAELC,IAAI,EAAG,GAAElB,YAAY,CAAC,EAAD,EAAK,EAAL,CAAS,GAFzB;QAGLmB,SAAS,EAAE,kBAHN;QAILC,GAAG,EAAG,GAAEpB,YAAY,CAAC,EAAD,EAAK,EAAL,CAAS;MAJxB,CANT;MAAA,uBAaE;QAAK,SAAS,EAAC,cAAf;QAAA,UAA+BY;MAA/B;QAAA;QAAA;QAAA;MAAA;IAbF;MAAA;MAAA;MAAA;IAAA,QADD,CAJH,EAqBG,CAAC,GAAGJ,KAAK,CAACE,IAAV,EAAgBC,GAAhB,CAAoB,CAACC,EAAD,EAAKS,CAAL,kBACnB,QAAC,MAAD;MACE,KAAK,EAAC,GADR,CACY;MADZ;MAEE,GAAG,EAAET,EAFP,CAEW;MAFX;MAGE,WAAW,EAAC,QAHd;MAIE,SAAS,EAAC,QAJZ;MAKE,QAAQ,EAAE,KALZ;MAME,WAAW,EAAE,CANf;MAOE,SAAS,EAAE,CAPb;MAQE,SAAS,EAAC;IARZ;MAAA;MAAA;MAAA;IAAA,QADD,CArBH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD,CArCD;;KAAML,I;AAuCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}