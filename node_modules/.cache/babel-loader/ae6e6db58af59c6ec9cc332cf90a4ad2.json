{"ast":null,"code":"var _jsxFileName = \"/Users/coltraneyan/repos/ethertree/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport Tree from \"./components/Tree.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst provider = new ethers.providers.EtherscanProvider(\"homestead\", \"GA5DBDU9R58E28EUTCVD9KA3H3FXBP5MH94\");\n\nfunction App() {\n  _s();\n\n  const [tree, setTree] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [show, setShow] = useState(\"Info\");\n  useEffect(() => {\n    async function fetchHistory(address) {\n      const historyGetter = await provider.getHistory(address);\n      const txList = new Set();\n      historyGetter.forEach(tx => {\n        txList.add(tx.from === address ? tx.to : tx.from);\n      });\n      setTree([...txList].slice(0, 20));\n      setShow(\"Graph\");\n    }\n\n    fetchHistory(address);\n  }, [address]);\n\n  async function triggerFetch(newAddress) {\n    setShow(\"Loading\");\n    const checksumAddress = await provider._getAddress(newAddress);\n    setAddress(checksumAddress);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      triggerFetch: triggerFetch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tree, {\n      show: show,\n      tree: tree,\n      triggerFetch: triggerFetch,\n      address: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"p54vL0c9qgMCVbhEjX9PCKBMAns=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Input","Tree","provider","providers","EtherscanProvider","App","tree","setTree","address","setAddress","show","setShow","fetchHistory","historyGetter","getHistory","txList","Set","forEach","tx","add","from","to","slice","triggerFetch","newAddress","checksumAddress","_getAddress"],"sources":["/Users/coltraneyan/repos/ethertree/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport Tree from \"./components/Tree.js\";\n\nconst provider = new ethers.providers.EtherscanProvider(\n  \"homestead\",\n  \"GA5DBDU9R58E28EUTCVD9KA3H3FXBP5MH94\"\n);\n\nfunction App() {\n  const [tree, setTree] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [show, setShow] = useState(\"Info\");\n\n  useEffect(() => {\n    async function fetchHistory(address) {\n      const historyGetter = await provider.getHistory(address);\n      const txList = new Set();\n      historyGetter.forEach((tx) => {\n        txList.add(tx.from === address ? tx.to : tx.from);\n      });\n\n      setTree([...txList].slice(0, 20));\n      setShow(\"Graph\");\n    }\n\n    fetchHistory(address);\n  }, [address]);\n\n  async function triggerFetch(newAddress) {\n    setShow(\"Loading\");\n    const checksumAddress = await provider._getAddress(newAddress);\n    setAddress(checksumAddress);\n  }\n\n  return (\n    <div className=\"page-container\">\n      <Input triggerFetch={triggerFetch} />\n      <Tree\n        show={show}\n        tree={tree}\n        triggerFetch={triggerFetch}\n        address={address}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,MAAMC,QAAQ,GAAG,IAAIH,MAAM,CAACI,SAAP,CAAiBC,iBAArB,CACf,WADe,EAEf,qCAFe,CAAjB;;AAKA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,MAAD,CAAhC;EAEAC,SAAS,CAAC,MAAM;IACd,eAAec,YAAf,CAA4BJ,OAA5B,EAAqC;MACnC,MAAMK,aAAa,GAAG,MAAMX,QAAQ,CAACY,UAAT,CAAoBN,OAApB,CAA5B;MACA,MAAMO,MAAM,GAAG,IAAIC,GAAJ,EAAf;MACAH,aAAa,CAACI,OAAd,CAAuBC,EAAD,IAAQ;QAC5BH,MAAM,CAACI,GAAP,CAAWD,EAAE,CAACE,IAAH,KAAYZ,OAAZ,GAAsBU,EAAE,CAACG,EAAzB,GAA8BH,EAAE,CAACE,IAA5C;MACD,CAFD;MAIAb,OAAO,CAAC,CAAC,GAAGQ,MAAJ,EAAYO,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAD,CAAP;MACAX,OAAO,CAAC,OAAD,CAAP;IACD;;IAEDC,YAAY,CAACJ,OAAD,CAAZ;EACD,CAbQ,EAaN,CAACA,OAAD,CAbM,CAAT;;EAeA,eAAee,YAAf,CAA4BC,UAA5B,EAAwC;IACtCb,OAAO,CAAC,SAAD,CAAP;IACA,MAAMc,eAAe,GAAG,MAAMvB,QAAQ,CAACwB,WAAT,CAAqBF,UAArB,CAA9B;IACAf,UAAU,CAACgB,eAAD,CAAV;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE,QAAC,KAAD;MAAO,YAAY,EAAEF;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MACE,IAAI,EAAEb,IADR;MAEE,IAAI,EAAEJ,IAFR;MAGE,YAAY,EAAEiB,YAHhB;MAIE,OAAO,EAAEf;IAJX;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GArCQH,G;;KAAAA,G;AAuCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}