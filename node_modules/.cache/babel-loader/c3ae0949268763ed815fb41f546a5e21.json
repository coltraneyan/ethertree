{"ast":null,"code":"var _jsxFileName = \"/Users/coltraneyan/repos/ethertree/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport Tree from \"./components/Tree.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tree, setTree] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [show, setShow] = useState(\"Info\");\n  useEffect(() => {\n    async function fetchHistory(address) {\n      const provider = new ethers.providers.EtherscanProvider(\"homestead\", \"GA5DBDU9R58E28EUTCVD9KA3H3FXBP5MH94\");\n      const historyGetter = await provider.getHistory(address);\n      const txList = new Set();\n      historyGetter.forEach(tx => {\n        txList.add(ethers.utils.hexlify(ethers.utils.toUtf8Bytes(tx.from)) === ethers.utils.hexlify(ethers.utils.toUtf8Bytes(parseInt(address))) ? tx.to : tx.from);\n      });\n      setTree([...txList].slice(0, 20));\n      setShow(\"Graph\");\n    }\n\n    fetchHistory(address);\n  }, [address]);\n\n  function triggerFetch(newAddress) {\n    setShow(\"Loading\");\n    setAddress(newAddress);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      triggerFetch: triggerFetch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tree, {\n      show: show,\n      tree: tree,\n      triggerFetch: triggerFetch,\n      address: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"p54vL0c9qgMCVbhEjX9PCKBMAns=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Input","Tree","App","tree","setTree","address","setAddress","show","setShow","fetchHistory","provider","providers","EtherscanProvider","historyGetter","getHistory","txList","Set","forEach","tx","add","utils","hexlify","toUtf8Bytes","from","parseInt","to","slice","triggerFetch","newAddress"],"sources":["/Users/coltraneyan/repos/ethertree/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport Tree from \"./components/Tree.js\";\n\nfunction App() {\n  const [tree, setTree] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [show, setShow] = useState(\"Info\");\n\n  useEffect(() => {\n    async function fetchHistory(address) {\n      const provider = new ethers.providers.EtherscanProvider(\n        \"homestead\",\n        \"GA5DBDU9R58E28EUTCVD9KA3H3FXBP5MH94\"\n      );\n\n      const historyGetter = await provider.getHistory(address);\n      const txList = new Set();\n      historyGetter.forEach((tx) => {\n        txList.add(\n          ethers.utils.hexlify(ethers.utils.toUtf8Bytes(tx.from)) ===\n            ethers.utils.hexlify(ethers.utils.toUtf8Bytes(parseInt(address)))\n            ? tx.to\n            : tx.from\n        );\n      });\n\n      setTree([...txList].slice(0, 20));\n      setShow(\"Graph\");\n    }\n\n    fetchHistory(address);\n  }, [address]);\n\n  function triggerFetch(newAddress) {\n    setShow(\"Loading\");\n    setAddress(newAddress);\n  }\n\n  return (\n    <div className=\"page-container\">\n      <Input triggerFetch={triggerFetch} />\n      <Tree\n        show={show}\n        tree={tree}\n        triggerFetch={triggerFetch}\n        address={address}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,MAAD,CAAhC;EAEAC,SAAS,CAAC,MAAM;IACd,eAAeW,YAAf,CAA4BJ,OAA5B,EAAqC;MACnC,MAAMK,QAAQ,GAAG,IAAIX,MAAM,CAACY,SAAP,CAAiBC,iBAArB,CACf,WADe,EAEf,qCAFe,CAAjB;MAKA,MAAMC,aAAa,GAAG,MAAMH,QAAQ,CAACI,UAAT,CAAoBT,OAApB,CAA5B;MACA,MAAMU,MAAM,GAAG,IAAIC,GAAJ,EAAf;MACAH,aAAa,CAACI,OAAd,CAAuBC,EAAD,IAAQ;QAC5BH,MAAM,CAACI,GAAP,CACEpB,MAAM,CAACqB,KAAP,CAAaC,OAAb,CAAqBtB,MAAM,CAACqB,KAAP,CAAaE,WAAb,CAAyBJ,EAAE,CAACK,IAA5B,CAArB,MACExB,MAAM,CAACqB,KAAP,CAAaC,OAAb,CAAqBtB,MAAM,CAACqB,KAAP,CAAaE,WAAb,CAAyBE,QAAQ,CAACnB,OAAD,CAAjC,CAArB,CADF,GAEIa,EAAE,CAACO,EAFP,GAGIP,EAAE,CAACK,IAJT;MAMD,CAPD;MASAnB,OAAO,CAAC,CAAC,GAAGW,MAAJ,EAAYW,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAD,CAAP;MACAlB,OAAO,CAAC,OAAD,CAAP;IACD;;IAEDC,YAAY,CAACJ,OAAD,CAAZ;EACD,CAvBQ,EAuBN,CAACA,OAAD,CAvBM,CAAT;;EAyBA,SAASsB,YAAT,CAAsBC,UAAtB,EAAkC;IAChCpB,OAAO,CAAC,SAAD,CAAP;IACAF,UAAU,CAACsB,UAAD,CAAV;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE,QAAC,KAAD;MAAO,YAAY,EAAED;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MACE,IAAI,EAAEpB,IADR;MAEE,IAAI,EAAEJ,IAFR;MAGE,YAAY,EAAEwB,YAHhB;MAIE,OAAO,EAAEtB;IAJX;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GA9CQH,G;;KAAAA,G;AAgDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}