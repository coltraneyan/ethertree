{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  register\n} = require(\"../util/serialization\");\n\nclass JsonData {\n  constructor(data) {\n    this._buffer = undefined;\n    this._data = undefined;\n\n    if (Buffer.isBuffer(data)) {\n      this._buffer = data;\n    } else {\n      this._data = data;\n    }\n  }\n\n  get() {\n    if (this._data === undefined && this._buffer !== undefined) {\n      this._data = JSON.parse(this._buffer.toString());\n    }\n\n    return this._data;\n  }\n\n}\n\nregister(JsonData, \"webpack/lib/json/JsonData\", null, {\n  serialize(obj, _ref) {\n    let {\n      write\n    } = _ref;\n\n    if (obj._buffer === undefined && obj._data !== undefined) {\n      obj._buffer = Buffer.from(JSON.stringify(obj._data));\n    }\n\n    write(obj._buffer);\n  },\n\n  deserialize(_ref2) {\n    let {\n      read\n    } = _ref2;\n    return new JsonData(read());\n  }\n\n});\nmodule.exports = JsonData;","map":{"version":3,"names":["register","require","JsonData","constructor","data","_buffer","undefined","_data","Buffer","isBuffer","get","JSON","parse","toString","serialize","obj","write","from","stringify","deserialize","read","module","exports"],"sources":["/Users/coltraneyan/repos/ethertree/node_modules/webpack/lib/json/JsonData.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { register } = require(\"../util/serialization\");\n\nclass JsonData {\n\tconstructor(data) {\n\t\tthis._buffer = undefined;\n\t\tthis._data = undefined;\n\t\tif (Buffer.isBuffer(data)) {\n\t\t\tthis._buffer = data;\n\t\t} else {\n\t\t\tthis._data = data;\n\t\t}\n\t}\n\n\tget() {\n\t\tif (this._data === undefined && this._buffer !== undefined) {\n\t\t\tthis._data = JSON.parse(this._buffer.toString());\n\t\t}\n\t\treturn this._data;\n\t}\n}\n\nregister(JsonData, \"webpack/lib/json/JsonData\", null, {\n\tserialize(obj, { write }) {\n\t\tif (obj._buffer === undefined && obj._data !== undefined) {\n\t\t\tobj._buffer = Buffer.from(JSON.stringify(obj._data));\n\t\t}\n\t\twrite(obj._buffer);\n\t},\n\tdeserialize({ read }) {\n\t\treturn new JsonData(read());\n\t}\n});\n\nmodule.exports = JsonData;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;EAAEA;AAAF,IAAeC,OAAO,CAAC,uBAAD,CAA5B;;AAEA,MAAMC,QAAN,CAAe;EACdC,WAAW,CAACC,IAAD,EAAO;IACjB,KAAKC,OAAL,GAAeC,SAAf;IACA,KAAKC,KAAL,GAAaD,SAAb;;IACA,IAAIE,MAAM,CAACC,QAAP,CAAgBL,IAAhB,CAAJ,EAA2B;MAC1B,KAAKC,OAAL,GAAeD,IAAf;IACA,CAFD,MAEO;MACN,KAAKG,KAAL,GAAaH,IAAb;IACA;EACD;;EAEDM,GAAG,GAAG;IACL,IAAI,KAAKH,KAAL,KAAeD,SAAf,IAA4B,KAAKD,OAAL,KAAiBC,SAAjD,EAA4D;MAC3D,KAAKC,KAAL,GAAaI,IAAI,CAACC,KAAL,CAAW,KAAKP,OAAL,CAAaQ,QAAb,EAAX,CAAb;IACA;;IACD,OAAO,KAAKN,KAAZ;EACA;;AAhBa;;AAmBfP,QAAQ,CAACE,QAAD,EAAW,2BAAX,EAAwC,IAAxC,EAA8C;EACrDY,SAAS,CAACC,GAAD,QAAiB;IAAA,IAAX;MAAEC;IAAF,CAAW;;IACzB,IAAID,GAAG,CAACV,OAAJ,KAAgBC,SAAhB,IAA6BS,GAAG,CAACR,KAAJ,KAAcD,SAA/C,EAA0D;MACzDS,GAAG,CAACV,OAAJ,GAAcG,MAAM,CAACS,IAAP,CAAYN,IAAI,CAACO,SAAL,CAAeH,GAAG,CAACR,KAAnB,CAAZ,CAAd;IACA;;IACDS,KAAK,CAACD,GAAG,CAACV,OAAL,CAAL;EACA,CANoD;;EAOrDc,WAAW,QAAW;IAAA,IAAV;MAAEC;IAAF,CAAU;IACrB,OAAO,IAAIlB,QAAJ,CAAakB,IAAI,EAAjB,CAAP;EACA;;AAToD,CAA9C,CAAR;AAYAC,MAAM,CAACC,OAAP,GAAiBpB,QAAjB"},"metadata":{},"sourceType":"script"}