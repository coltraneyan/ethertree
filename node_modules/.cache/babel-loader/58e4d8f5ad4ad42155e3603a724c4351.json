{"ast":null,"code":"var _jsxFileName = \"/Users/coltraneyan/repos/ethertree/src/components/Tree.js\";\nimport React from \"react\";\nimport Xarrow from \"react-xarrows/lib/Xarrow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tree = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"start\",\n        children: props.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), [...props.tree].map((tx, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: i,\n          onClick: e => {\n            props.triggerFetch(e.target.innerHTML);\n          },\n          children: tx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Xarrow, {\n          start: \"start\" //can be react ref\n          ,\n          end: `${i}` //or an id\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tree;\nexport default Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","Xarrow","Tree","props","address","tree","map","tx","i","e","triggerFetch","target","innerHTML"],"sources":["/Users/coltraneyan/repos/ethertree/src/components/Tree.js"],"sourcesContent":["import React from \"react\";\nimport Xarrow from \"react-xarrows/lib/Xarrow\";\n\nconst Tree = (props) => {\n  return (\n    <div>\n      <div>\n        <div id=\"start\">{props.address}</div>\n        {[...props.tree].map((tx, i) => (\n          <div>\n            <div\n              id={i}\n              onClick={(e) => {\n                props.triggerFetch(e.target.innerHTML);\n              }}\n            >\n              {tx}\n            </div>\n            <Xarrow\n              start=\"start\" //can be react ref\n              end={`${i}`} //or an id\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Tree;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EACtB,oBACE;IAAA,uBACE;MAAA,wBACE;QAAK,EAAE,EAAC,OAAR;QAAA,UAAiBA,KAAK,CAACC;MAAvB;QAAA;QAAA;QAAA;MAAA,QADF,EAEG,CAAC,GAAGD,KAAK,CAACE,IAAV,EAAgBC,GAAhB,CAAoB,CAACC,EAAD,EAAKC,CAAL,kBACnB;QAAA,wBACE;UACE,EAAE,EAAEA,CADN;UAEE,OAAO,EAAGC,CAAD,IAAO;YACdN,KAAK,CAACO,YAAN,CAAmBD,CAAC,CAACE,MAAF,CAASC,SAA5B;UACD,CAJH;UAAA,UAMGL;QANH;UAAA;UAAA;UAAA;QAAA,QADF,eASE,QAAC,MAAD;UACE,KAAK,EAAC,OADR,CACgB;UADhB;UAEE,GAAG,EAAG,GAAEC,CAAE,EAFZ,CAEe;;QAFf;UAAA;UAAA;UAAA;QAAA,QATF;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,CAFH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAxBD;;KAAMN,I;AA0BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}