{"ast":null,"code":"var _jsxFileName = \"/Users/coltraneyan/repos/ethertree/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport Tree from \"./components/Tree.js\";\nimport Info from \"./components/Info\";\nimport Loading from \"./components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tree, setTree] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [ready, setReady] = useState( /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 38\n  }, this));\n  useEffect(() => {\n    async function fetchHistory(address) {\n      const provider = new ethers.providers.EtherscanProvider(\"homestead\", \"GA5DBDU9R58E28EUTCVD9KA3H3FXBP5MH94\");\n      const historyGetter = await provider.getHistory(address);\n      const txList = new Set();\n      historyGetter.forEach(tx => {\n        txList.add(tx.from === parseInt(address) ? tx.to : tx.from);\n      });\n      setTree([...txList].slice(0, 20));\n      setReady( /*#__PURE__*/_jsxDEV(Tree, {\n        tree: tree,\n        triggerFetch: triggerFetch,\n        address: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this));\n    }\n\n    fetchHistory(address);\n  }, [address]);\n\n  function triggerFetch(newAddress) {\n    setReady( /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this));\n    setAddress(newAddress);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      triggerFetch: triggerFetch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), ready]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1TvYk1QmkY/PLByYI7Meh8Yggy4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Input","Tree","Info","Loading","App","tree","setTree","address","setAddress","ready","setReady","fetchHistory","provider","providers","EtherscanProvider","historyGetter","getHistory","txList","Set","forEach","tx","add","from","parseInt","to","slice","triggerFetch","newAddress"],"sources":["/Users/coltraneyan/repos/ethertree/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport Input from \"./components/Input\";\nimport Tree from \"./components/Tree.js\";\nimport Info from \"./components/Info\";\nimport Loading from \"./components/Loading\";\n\nfunction App() {\n  const [tree, setTree] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [ready, setReady] = useState(<Info />);\n\n  useEffect(() => {\n    async function fetchHistory(address) {\n      const provider = new ethers.providers.EtherscanProvider(\n        \"homestead\",\n        \"GA5DBDU9R58E28EUTCVD9KA3H3FXBP5MH94\"\n      );\n\n      const historyGetter = await provider.getHistory(address);\n      const txList = new Set();\n      historyGetter.forEach((tx) => {\n        txList.add(tx.from === parseInt(address) ? tx.to : tx.from);\n      });\n\n      setTree([...txList].slice(0, 20));\n      setReady(\n        <Tree tree={tree} triggerFetch={triggerFetch} address={address} />\n      );\n    }\n\n    fetchHistory(address);\n  }, [address]);\n\n  function triggerFetch(newAddress) {\n    setReady(<Loading />);\n    setAddress(newAddress);\n  }\n\n  return (\n    <div className=\"page-container\">\n      <Input triggerFetch={triggerFetch} />\n      {ready}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,eAAC,QAAC,IAAD;IAAA;IAAA;IAAA;EAAA,QAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,eAAea,YAAf,CAA4BJ,OAA5B,EAAqC;MACnC,MAAMK,QAAQ,GAAG,IAAIb,MAAM,CAACc,SAAP,CAAiBC,iBAArB,CACf,WADe,EAEf,qCAFe,CAAjB;MAKA,MAAMC,aAAa,GAAG,MAAMH,QAAQ,CAACI,UAAT,CAAoBT,OAApB,CAA5B;MACA,MAAMU,MAAM,GAAG,IAAIC,GAAJ,EAAf;MACAH,aAAa,CAACI,OAAd,CAAuBC,EAAD,IAAQ;QAC5BH,MAAM,CAACI,GAAP,CAAWD,EAAE,CAACE,IAAH,KAAYC,QAAQ,CAAChB,OAAD,CAApB,GAAgCa,EAAE,CAACI,EAAnC,GAAwCJ,EAAE,CAACE,IAAtD;MACD,CAFD;MAIAhB,OAAO,CAAC,CAAC,GAAGW,MAAJ,EAAYQ,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAD,CAAP;MACAf,QAAQ,eACN,QAAC,IAAD;QAAM,IAAI,EAAEL,IAAZ;QAAkB,YAAY,EAAEqB,YAAhC;QAA8C,OAAO,EAAEnB;MAAvD;QAAA;QAAA;QAAA;MAAA,QADM,CAAR;IAGD;;IAEDI,YAAY,CAACJ,OAAD,CAAZ;EACD,CApBQ,EAoBN,CAACA,OAAD,CApBM,CAAT;;EAsBA,SAASmB,YAAT,CAAsBC,UAAtB,EAAkC;IAChCjB,QAAQ,eAAC,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAD,CAAR;IACAF,UAAU,CAACmB,UAAD,CAAV;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE,QAAC,KAAD;MAAO,YAAY,EAAED;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,EAEGjB,KAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAtCQL,G;;KAAAA,G;AAwCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}