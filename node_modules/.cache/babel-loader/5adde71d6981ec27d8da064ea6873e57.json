{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst {\n  approve\n} = require(\"../javascript/JavascriptParserHelpers\");\n\nconst InnerGraph = require(\"../optimize/InnerGraph\");\n\nconst URLDependency = require(\"./URLDependency\");\n/** @typedef {import(\"estree\").NewExpression} NewExpressionNode */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n\n\nclass URLPlugin {\n  /**\n   * @param {Compiler} compiler compiler\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"URLPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(URLDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(URLDependency, new URLDependency.Template());\n      /**\n       * @param {JavascriptParser} parser parser\n       * @param {object} parserOptions options\n       */\n\n      const parserCallback = (parser, parserOptions) => {\n        if (parserOptions.url === false) return;\n        const relative = parserOptions.url === \"relative\";\n        /**\n         * @param {NewExpressionNode} expr expression\n         * @returns {undefined | string} request\n         */\n\n        const getUrlRequest = expr => {\n          if (expr.arguments.length !== 2) return;\n          const [arg1, arg2] = expr.arguments;\n          if (arg2.type !== \"MemberExpression\" || arg1.type === \"SpreadElement\") return;\n          const chain = parser.extractMemberExpressionChain(arg2);\n          if (chain.members.length !== 1 || chain.object.type !== \"MetaProperty\" || chain.object.meta.name !== \"import\" || chain.object.property.name !== \"meta\" || chain.members[0] !== \"url\") return;\n          const request = parser.evaluateExpression(arg1).asString();\n          return request;\n        };\n\n        parser.hooks.canRename.for(\"URL\").tap(\"URLPlugin\", approve);\n        parser.hooks.new.for(\"URL\").tap(\"URLPlugin\", _expr => {\n          const expr =\n          /** @type {NewExpressionNode} */\n          _expr;\n          const request = getUrlRequest(expr);\n          if (!request) return;\n          const [arg1, arg2] = expr.arguments;\n          const dep = new URLDependency(request, [arg1.range[0], arg2.range[1]], expr.range, relative);\n          dep.loc = expr.loc;\n          parser.state.current.addDependency(dep);\n          InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n          return true;\n        });\n        parser.hooks.isPure.for(\"NewExpression\").tap(\"URLPlugin\", _expr => {\n          const expr =\n          /** @type {NewExpressionNode} */\n          _expr;\n          const {\n            callee\n          } = expr;\n          if (callee.type !== \"Identifier\") return;\n          const calleeInfo = parser.getFreeInfoFromVariable(callee.name);\n          if (!calleeInfo || calleeInfo.name !== \"URL\") return;\n          const request = getUrlRequest(expr);\n          if (request) return true;\n        });\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"URLPlugin\", parserCallback);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"URLPlugin\", parserCallback);\n    });\n  }\n\n}\n\nmodule.exports = URLPlugin;","map":{"version":3,"names":["approve","require","InnerGraph","URLDependency","URLPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","parserCallback","parser","parserOptions","url","relative","getUrlRequest","expr","arguments","length","arg1","arg2","type","chain","extractMemberExpressionChain","members","object","meta","name","property","request","evaluateExpression","asString","canRename","for","new","_expr","dep","range","loc","state","current","addDependency","onUsage","e","usedByExports","isPure","callee","calleeInfo","getFreeInfoFromVariable","module","exports"],"sources":["/Users/coltraneyan/repos/ethertree/node_modules/webpack/lib/dependencies/URLPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst { approve } = require(\"../javascript/JavascriptParserHelpers\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst URLDependency = require(\"./URLDependency\");\n\n/** @typedef {import(\"estree\").NewExpression} NewExpressionNode */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n\nclass URLPlugin {\n\t/**\n\t * @param {Compiler} compiler compiler\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"URLPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(URLDependency, normalModuleFactory);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tURLDependency,\n\t\t\t\t\tnew URLDependency.Template()\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * @param {JavascriptParser} parser parser\n\t\t\t\t * @param {object} parserOptions options\n\t\t\t\t */\n\t\t\t\tconst parserCallback = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.url === false) return;\n\t\t\t\t\tconst relative = parserOptions.url === \"relative\";\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {NewExpressionNode} expr expression\n\t\t\t\t\t * @returns {undefined | string} request\n\t\t\t\t\t */\n\t\t\t\t\tconst getUrlRequest = expr => {\n\t\t\t\t\t\tif (expr.arguments.length !== 2) return;\n\n\t\t\t\t\t\tconst [arg1, arg2] = expr.arguments;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\targ2.type !== \"MemberExpression\" ||\n\t\t\t\t\t\t\targ1.type === \"SpreadElement\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\tconst chain = parser.extractMemberExpressionChain(arg2);\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tchain.members.length !== 1 ||\n\t\t\t\t\t\t\tchain.object.type !== \"MetaProperty\" ||\n\t\t\t\t\t\t\tchain.object.meta.name !== \"import\" ||\n\t\t\t\t\t\t\tchain.object.property.name !== \"meta\" ||\n\t\t\t\t\t\t\tchain.members[0] !== \"url\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\tconst request = parser.evaluateExpression(arg1).asString();\n\n\t\t\t\t\t\treturn request;\n\t\t\t\t\t};\n\n\t\t\t\t\tparser.hooks.canRename.for(\"URL\").tap(\"URLPlugin\", approve);\n\t\t\t\t\tparser.hooks.new.for(\"URL\").tap(\"URLPlugin\", _expr => {\n\t\t\t\t\t\tconst expr = /** @type {NewExpressionNode} */ (_expr);\n\n\t\t\t\t\t\tconst request = getUrlRequest(expr);\n\n\t\t\t\t\t\tif (!request) return;\n\n\t\t\t\t\t\tconst [arg1, arg2] = expr.arguments;\n\t\t\t\t\t\tconst dep = new URLDependency(\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t[arg1.range[0], arg2.range[1]],\n\t\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\t\trelative\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.isPure.for(\"NewExpression\").tap(\"URLPlugin\", _expr => {\n\t\t\t\t\t\tconst expr = /** @type {NewExpressionNode} */ (_expr);\n\t\t\t\t\t\tconst { callee } = expr;\n\t\t\t\t\t\tif (callee.type !== \"Identifier\") return;\n\t\t\t\t\t\tconst calleeInfo = parser.getFreeInfoFromVariable(callee.name);\n\t\t\t\t\t\tif (!calleeInfo || calleeInfo.name !== \"URL\") return;\n\n\t\t\t\t\t\tconst request = getUrlRequest(expr);\n\n\t\t\t\t\t\tif (request) return true;\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"URLPlugin\", parserCallback);\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"URLPlugin\", parserCallback);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = URLPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}